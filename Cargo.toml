[package]
name = "biodivine-lib-param-bn"
version = "0.2.0-SNAPSHOT"
authors = ["Samuel Pastva <daemontus@gmail.com>"]
edition = "2018"
description = "Library for working with parametrized Boolean networks."
homepage = "https://github.com/sybila/biodivine-lib-param-bn"
repository = "https://github.com/sybila/biodivine-lib-param-bn"
readme = "README.md"
keywords = ["boolean-network", "asynchronous", "symbolic", "graph", "systems-biology"]
categories = ["science", "simulation"]
license = "MIT"

[lib]
name = "biodivine_lib_param_bn"
path = "src/lib.rs"

[[bin]]
name = "dump-graph"
path = "src/bin/dump_graph.rs"

[[bin]]
name = "bnet_to_aeon"
path = "src/bin/bnet_to_aeon.rs"

[[bin]]
name = "hctl_test"
path = "src/bin/hctl_test.rs"

# Enable rich docs for some online docs autogen services.
[package.metadata.docs.rs]
rustdoc-args = ["--html-in-header", "docs-head.html"]

[dependencies]
biodivine-lib-bdd = "0.3.0"
regex = "1.5.4"                 # Regexes used for parsing of basic .aeon constructs.
lazy_static = "1.4.0"           # Used for initialization of commonly used regexes.
roxmltree = "0.14.0"            # Used for SBML parsing.
bitvector = "0.1.5"             # Represents Boolean states of complex networks.

[features]
# With shields_up you enable explicit assertions of pre/post conditions and invariants in critical
# codepaths that cannot be proved safe by the rust compiler. Every such assertion should be proven
# correct by an associated comment. We use shields_up instead of debug_assertion to have it separated
# from debug mode (shields_up is not strictly for debugging, its a general safety net / troubleshooting
# measure). For official releases and benchmarks, you should disable shields_up to avoid unnecessary
# performance penalty. Avoid introducing dead code when shields_up is enabled - this will mess with test coverage.
shields_up = []

default = ["shields_up"]

[dev-dependencies]
pretty_assertions = "0.6.1"